#!/bin/sh

# Определение папки скрипта и зависящих от неё параметров
_script_path=$(cd "$(dirname $0)" && pwd)
_xkeentg_path="${_script_path}/.xkeentg"
_env_file="${_xkeentg_path}/.env"

# Загрузка параметров
if [ -f "$_env_file" ]; then
    . "$_env_file"
else
    echo "Файл конфигурации ${_env_file} не найден, запуск невозможен"
    exit 255
fi

# Логи
_log_path="/opt/var/log/tgbotd"
_log_file_msg="${_log_path}/msg.log"
_log_file_msg_illegal="${_log_path}/msg_illegal.log"
_log_file_error="${_log_path}/error.log"
_log_file_debug="${_log_path}/debug.log"

mkdir -p "$_log_path"
_response="HTTP/1.1 200 OK\r\nContent-Length: 0\nContent-Type: text/html\n\n"

log() {
    local _log_file="$1"
    local _msg="$2"
    echo -e "$(date +"%Y-%m-%d %T") - ${_msg}" >> "$_log_file"
}

send_message() {
    local _msg="$1"
    local _user_id="$2"
    if [ -z "$_user_id" ]; then
        _user_id="$_chat_id"
    fi
    curl -s "https://api.telegram.org/bot${TG_TOKEN}/sendMessage?chat_id=${_user_id}&text=${_msg// /%20}" &>/dev/null
}

# Бесконечный цикл для обработки входящих сообщений
while true; do
    _request=$(echo -e "$_response" | nc -l -p $TG_LOCAL_PORT )
    _json=$(echo "$_request" | sed "/{/!d" )
    _log_msg=$(echo "$_json" | jq -c '.')
    if [ $? -ne 0 ]; then
        log "$_log_file_error" "Ошибка парсинга json\n${_request}"
        continue
    elif [ "$_json" = "" ]; then
        log "$_log_file_error" "json не обнаружен\n${_request}"
        continue
    fi

    _chat_id=$(echo "$_json" | jq -r '.message.chat.id')
    _text=$(echo "$_json" | jq -r '.message.text')
    if [[ "$_chat_id" == "null" ]]; then
        log "$_log_file_error" "Пользователь не найден\n${_request}"
        continue
    elif [[ "$TG_CHAT_IDS" != *"$_chat_id"* ]]; then
        # Проверка нелегалов, не прописанных в конфиге
        log "$_log_file_msg_illegal" "$_log_msg"
        _reply="Вы не зарегистрированы в системе, обратитесь к администратору"
        send_message "$_reply"
        curl -s "https://api.telegram.org/bot${TG_TOKEN}/banChatMember?chat_id=${_chat_id}&user_id=${_chat_id}" &>/dev/null
        continue
    else
        log "$_log_file_msg" "$_log_msg"
    fi

    # Парсинг текста сообщения - команды
    case "$_text" in
        "/start"| \
        "/status")
            _reply="Загрузка CPU: $(uptime | awk -F'load average:' '{print $2}')"
            ;;

        *)
            _reply="Неизвестная команда"
            ;;
    esac

    # Отправляем ответ в Telegram
    echo -e "\t${_reply}" >> "$_log_file_msg"
    send_message "$_reply"
done
