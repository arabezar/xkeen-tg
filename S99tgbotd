#!/bin/sh

# Информация о службе
# Краткое описание: Запуск / Остановка tgbotd
# Версия: 1.0.1

ACTION=$1

DAEMON_NAME="tgbotd"
BIN_PATH="/opt/sbin"
PID_PATH="/opt/var/run"
LOG_PATH="/opt/var/log"

BOT_PATH="${BIN_PATH}/${DAEMON_NAME}"
PID_FILE="${PID_PATH}/${DAEMON_NAME}.pid"
LOG_FILE="${LOG_PATH}/${DAEMON_NAME}/${DAEMON_NAME}.log"

# Загрузка параметров
ENV_FILE="${BIN_PATH}/.xkeentg/.env"
[ -f "$ENV_FILE" ] && . "$ENV_FILE" &>/dev/null
[ -z "$TG_LOCAL_PORT" ] && echo "Env TG_LOCAL_PORT is not set. Exiting" && exit 255

ansi_red="\033[1;31m";
ansi_white="\033[1;37m";
ansi_green="\033[1;32m";
ansi_yellow="\033[1;33m";
ansi_std="\033[m";

start() {
    echo -e -n "$ansi_white Starting $DAEMON_NAME... $ansi_std"
    if check > /dev/null; then
        echo -e "            $ansi_yellow already running. $ansi_std"
        return 0
    fi
    if $(netstat -tulpn 2>/dev/null | grep ":$TG_LOCAL_PORT " &>/dev/null); then
        echo -e "            $ansi_red port is busy. $ansi_std"
        return 3
    fi
    echo "$(date +"%Y-%m-%d %H:%M:%S") starting" >> "$LOG_FILE"
    "$BOT_PATH" >> "$LOG_FILE" 2>&1 &
    # echo $! > "$PID_FILE"
    ps | grep "$DAEMON_NAME" | grep -v grep | sed 's/^\s*//' | cut -d' ' -f1 | tail -n1 > "$PID_FILE"
    netstat -tulpn 2>/dev/null | grep ":$TG_LOCAL_PORT " | xargs | rev | cut -d' ' -f1 | rev | cut -d/ -f1 >> "$PID_FILE"
    echo -e "            $ansi_green done. $ansi_std"
    logger "Started $DAEMON_NAME."
    return 0
}

stop() {
    echo -e -n "$ansi_white Shutting down $DAEMON_NAME... $ansi_std"
    if [ -f "$PID_FILE" ]; then
        kill "$(cat $PID_FILE | xargs)" 2>/dev/null
        rm -f "$PID_FILE"
        echo "$(date +"%Y-%m-%d %H:%M:%S") stopped" >> "$LOG_FILE"
        echo -e "            $ansi_green done. $ansi_std"
        logger "Stopped $DAEMON_NAME."
        return 0
    else
        echo -e "            $ansi_red not running. $ansi_std"
        return 2
    fi
}

check() {
    echo -e -n "$ansi_white Checking $DAEMON_NAME... $ansi_std"
    if [ -f "$PID_FILE" ] && kill -0 "$(cat $PID_FILE | tail -n1)" &>/dev/null; then
        echo -e "            $ansi_green alive. $ansi_std";
        return 0
    else
        echo -e "            $ansi_red dead. $ansi_std";
        return 1
    fi
}

case "$ACTION" in
    start) start ;;
    stop | kill) stop ;;
    restart) check > /dev/null && stop; start ;;
    check | status) check ;;
    *)
        echo -e "$ansi_white Usage: $0 (start|stop|restart|check|status|kill)$ansi_std"
        exit 255
        ;;
esac
